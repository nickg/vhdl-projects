-- File: test_findmax.vhd
-- Generated by MyHDL 0.11
-- Date: Wed Sep  1 11:52:07 2021


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity test_findmax is
end entity test_findmax;


architecture MyHDL of test_findmax is



signal clock: std_logic;
signal stopped: std_logic;
signal z: unsigned(15 downto 0);
signal dut_zlo: unsigned(15 downto 0);
signal dut_zhi: unsigned(15 downto 0);
signal dut_comphi_zlo: unsigned(15 downto 0);
signal dut_comphi_zhi: unsigned(15 downto 0);
signal dut_comphi_comphi_zlo: unsigned(15 downto 0);
signal dut_comphi_comphi_zhi: unsigned(15 downto 0);
signal dut_comphi_comphi_comphi_zlo: unsigned(15 downto 0);
signal dut_comphi_comphi_comphi_zhi: unsigned(15 downto 0);
signal dut_comphi_comphi_complo_zlo: unsigned(15 downto 0);
signal dut_comphi_comphi_complo_zhi: unsigned(15 downto 0);
signal dut_comphi_complo_zlo: unsigned(15 downto 0);
signal dut_comphi_complo_zhi: unsigned(15 downto 0);
signal dut_comphi_complo_comphi_zlo: unsigned(15 downto 0);
signal dut_comphi_complo_comphi_zhi: unsigned(15 downto 0);
signal dut_comphi_complo_complo_zlo: unsigned(15 downto 0);
signal dut_comphi_complo_complo_zhi: unsigned(15 downto 0);
signal dut_complo_zlo: unsigned(15 downto 0);
signal dut_complo_zhi: unsigned(15 downto 0);
signal dut_complo_comphi_zlo: unsigned(15 downto 0);
signal dut_complo_comphi_zhi: unsigned(15 downto 0);
signal dut_complo_comphi_comphi_zlo: unsigned(15 downto 0);
signal dut_complo_comphi_comphi_zhi: unsigned(15 downto 0);
signal dut_complo_comphi_complo_zlo: unsigned(15 downto 0);
signal dut_complo_comphi_complo_zhi: unsigned(15 downto 0);
signal dut_complo_complo_zlo: unsigned(15 downto 0);
signal dut_complo_complo_zhi: unsigned(15 downto 0);
signal dut_complo_complo_comphi_zlo: unsigned(15 downto 0);
signal dut_complo_complo_comphi_zhi: unsigned(15 downto 0);
signal dut_complo_complo_complo_zlo: unsigned(15 downto 0);
signal dut_complo_complo_complo_zhi: unsigned(15 downto 0);
type t_array_a is array(0 to 32-1) of unsigned(15 downto 0);
signal a: t_array_a;

function MYHDL149_glibc_random(
    seed: in unsigned
    ) return unsigned is
    variable random_word: unsigned(63 downto 0);
begin
    random_word := unsigned'("0000000000000000000000000000000000000000000000000000000000000000");
    random_word := ((seed * 1103515245) + 12345);
    return random_word(32-1 downto 0);
end function MYHDL149_glibc_random;

begin




TEST_FINDMAX_DUT_COMP2_LOGIC: process (dut_zhi, dut_zlo) is
begin
    if (dut_zhi > dut_zlo) then
        z <= dut_zhi;
    else
        z <= dut_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMP2_LOGIC: process (dut_complo_zhi, dut_complo_zlo) is
begin
    if (dut_complo_zhi > dut_complo_zlo) then
        dut_zlo <= dut_complo_zhi;
    else
        dut_zlo <= dut_complo_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPLO_COMP2_LOGIC: process (dut_complo_complo_zhi, dut_complo_complo_zlo) is
begin
    if (dut_complo_complo_zhi > dut_complo_complo_zlo) then
        dut_complo_zlo <= dut_complo_complo_zhi;
    else
        dut_complo_zlo <= dut_complo_complo_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPLO_COMP2_LOGIC: process (dut_complo_complo_complo_zhi, dut_complo_complo_complo_zlo) is
begin
    if (dut_complo_complo_complo_zhi > dut_complo_complo_complo_zlo) then
        dut_complo_complo_zlo <= dut_complo_complo_complo_zhi;
    else
        dut_complo_complo_zlo <= dut_complo_complo_complo_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPLO_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(31) > a(30)) then
        dut_complo_complo_complo_zlo <= a(31);
    else
        dut_complo_complo_complo_zlo <= a(30);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPLO_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPLO_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(29) > a(28)) then
        dut_complo_complo_complo_zhi <= a(29);
    else
        dut_complo_complo_complo_zhi <= a(28);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPLO_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPHI_COMP2_LOGIC: process (dut_complo_complo_comphi_zhi, dut_complo_complo_comphi_zlo) is
begin
    if (dut_complo_complo_comphi_zhi > dut_complo_complo_comphi_zlo) then
        dut_complo_complo_zhi <= dut_complo_complo_comphi_zhi;
    else
        dut_complo_complo_zhi <= dut_complo_complo_comphi_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPHI_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(27) > a(26)) then
        dut_complo_complo_comphi_zlo <= a(27);
    else
        dut_complo_complo_comphi_zlo <= a(26);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPHI_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPHI_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(25) > a(24)) then
        dut_complo_complo_comphi_zhi <= a(25);
    else
        dut_complo_complo_comphi_zhi <= a(24);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPLO_COMPHI_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPHI_COMP2_LOGIC: process (dut_complo_comphi_zhi, dut_complo_comphi_zlo) is
begin
    if (dut_complo_comphi_zhi > dut_complo_comphi_zlo) then
        dut_complo_zhi <= dut_complo_comphi_zhi;
    else
        dut_complo_zhi <= dut_complo_comphi_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPLO_COMP2_LOGIC: process (dut_complo_comphi_complo_zhi, dut_complo_comphi_complo_zlo) is
begin
    if (dut_complo_comphi_complo_zhi > dut_complo_comphi_complo_zlo) then
        dut_complo_comphi_zlo <= dut_complo_comphi_complo_zhi;
    else
        dut_complo_comphi_zlo <= dut_complo_comphi_complo_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPLO_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(23) > a(22)) then
        dut_complo_comphi_complo_zlo <= a(23);
    else
        dut_complo_comphi_complo_zlo <= a(22);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPLO_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPLO_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(21) > a(20)) then
        dut_complo_comphi_complo_zhi <= a(21);
    else
        dut_complo_comphi_complo_zhi <= a(20);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPLO_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPHI_COMP2_LOGIC: process (dut_complo_comphi_comphi_zhi, dut_complo_comphi_comphi_zlo) is
begin
    if (dut_complo_comphi_comphi_zhi > dut_complo_comphi_comphi_zlo) then
        dut_complo_comphi_zhi <= dut_complo_comphi_comphi_zhi;
    else
        dut_complo_comphi_zhi <= dut_complo_comphi_comphi_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPHI_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(19) > a(18)) then
        dut_complo_comphi_comphi_zlo <= a(19);
    else
        dut_complo_comphi_comphi_zlo <= a(18);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPHI_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPHI_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(17) > a(16)) then
        dut_complo_comphi_comphi_zhi <= a(17);
    else
        dut_complo_comphi_comphi_zhi <= a(16);
    end if;
end process TEST_FINDMAX_DUT_COMPLO_COMPHI_COMPHI_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMP2_LOGIC: process (dut_comphi_zhi, dut_comphi_zlo) is
begin
    if (dut_comphi_zhi > dut_comphi_zlo) then
        dut_zhi <= dut_comphi_zhi;
    else
        dut_zhi <= dut_comphi_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPLO_COMP2_LOGIC: process (dut_comphi_complo_zhi, dut_comphi_complo_zlo) is
begin
    if (dut_comphi_complo_zhi > dut_comphi_complo_zlo) then
        dut_comphi_zlo <= dut_comphi_complo_zhi;
    else
        dut_comphi_zlo <= dut_comphi_complo_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPLO_COMP2_LOGIC: process (dut_comphi_complo_complo_zhi, dut_comphi_complo_complo_zlo) is
begin
    if (dut_comphi_complo_complo_zhi > dut_comphi_complo_complo_zlo) then
        dut_comphi_complo_zlo <= dut_comphi_complo_complo_zhi;
    else
        dut_comphi_complo_zlo <= dut_comphi_complo_complo_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPLO_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(15) > a(14)) then
        dut_comphi_complo_complo_zlo <= a(15);
    else
        dut_comphi_complo_complo_zlo <= a(14);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPLO_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPLO_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(13) > a(12)) then
        dut_comphi_complo_complo_zhi <= a(13);
    else
        dut_comphi_complo_complo_zhi <= a(12);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPLO_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPHI_COMP2_LOGIC: process (dut_comphi_complo_comphi_zhi, dut_comphi_complo_comphi_zlo) is
begin
    if (dut_comphi_complo_comphi_zhi > dut_comphi_complo_comphi_zlo) then
        dut_comphi_complo_zhi <= dut_comphi_complo_comphi_zhi;
    else
        dut_comphi_complo_zhi <= dut_comphi_complo_comphi_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPHI_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(11) > a(10)) then
        dut_comphi_complo_comphi_zlo <= a(11);
    else
        dut_comphi_complo_comphi_zlo <= a(10);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPHI_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPHI_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(9) > a(8)) then
        dut_comphi_complo_comphi_zhi <= a(9);
    else
        dut_comphi_complo_comphi_zhi <= a(8);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPLO_COMPHI_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPHI_COMP2_LOGIC: process (dut_comphi_comphi_zhi, dut_comphi_comphi_zlo) is
begin
    if (dut_comphi_comphi_zhi > dut_comphi_comphi_zlo) then
        dut_comphi_zhi <= dut_comphi_comphi_zhi;
    else
        dut_comphi_zhi <= dut_comphi_comphi_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPLO_COMP2_LOGIC: process (dut_comphi_comphi_complo_zhi, dut_comphi_comphi_complo_zlo) is
begin
    if (dut_comphi_comphi_complo_zhi > dut_comphi_comphi_complo_zlo) then
        dut_comphi_comphi_zlo <= dut_comphi_comphi_complo_zhi;
    else
        dut_comphi_comphi_zlo <= dut_comphi_comphi_complo_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPLO_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(7) > a(6)) then
        dut_comphi_comphi_complo_zlo <= a(7);
    else
        dut_comphi_comphi_complo_zlo <= a(6);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPLO_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPLO_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(5) > a(4)) then
        dut_comphi_comphi_complo_zhi <= a(5);
    else
        dut_comphi_comphi_complo_zhi <= a(4);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPLO_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPHI_COMP2_LOGIC: process (dut_comphi_comphi_comphi_zhi, dut_comphi_comphi_comphi_zlo) is
begin
    if (dut_comphi_comphi_comphi_zhi > dut_comphi_comphi_comphi_zlo) then
        dut_comphi_comphi_zhi <= dut_comphi_comphi_comphi_zhi;
    else
        dut_comphi_comphi_zhi <= dut_comphi_comphi_comphi_zlo;
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPHI_COMPLO_COMP2_LOGIC: process (a) is
begin
    if (a(3) > a(2)) then
        dut_comphi_comphi_comphi_zlo <= a(3);
    else
        dut_comphi_comphi_comphi_zlo <= a(2);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPHI_COMPLO_COMP2_LOGIC;

TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPHI_COMPHI_COMP2_LOGIC: process (a) is
begin
    if (a(1) > a(0)) then
        dut_comphi_comphi_comphi_zhi <= a(1);
    else
        dut_comphi_comphi_comphi_zhi <= a(0);
    end if;
end process TEST_FINDMAX_DUT_COMPHI_COMPHI_COMPHI_COMPHI_COMP2_LOGIC;

TEST_FINDMAX_CLOCKGEN: process is
begin
    clock <= '0';
    wait for 10 * 1 ns;
    while (not bool(stopped)) loop
        clock <= stdl((not bool(clock)));
        wait for 10 * 1 ns;
    end loop;
    wait;
end process TEST_FINDMAX_CLOCKGEN;

TEST_FINDMAX_STIMULUS: process is
    variable exp: unsigned(15 downto 0);
    variable val: unsigned(15 downto 0);
    variable random_word: unsigned(31 downto 0);
begin
    stopped <= '0';
    wait for 10 * 1 ns;
    exp := to_unsigned(0, 16);
    val := to_unsigned(0, 16);
    random_word := unsigned'("00000000000000000000000000000000");
    random_word := to_unsigned(93, 32);
    for i in 0 to (2 ** 18)-1 loop
        exp := to_unsigned(0, 16);
        for s in 0 to 32-1 loop
            random_word := MYHDL149_glibc_random(random_word);
            val := random_word(16-1 downto 0);
            if (exp < val) then
                exp := val;
            end if;
            a(s) <= val;
        end loop;
        wait until falling_edge(clock);
        assert (z = exp)
            report "*** AssertionError ***"
            severity error;
    end loop;
    stopped <= '1';
    wait for 10 * 1 ns;
    wait;
end process TEST_FINDMAX_STIMULUS;

end architecture MyHDL;
