-- ******************************************************************
-- ******************************************************************
-- This file is generated by soc_gen and will be overwritten next time
-- the tool is run. See soc_top/README for information on running soc_gen.
-- ******************************************************************
-- ******************************************************************
-- ******************************************************************




















library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;
use work.cpu2j0_pack.all;
use work.misc_pack.all;
use work.aic2_pack.all;

entity aic_slave_process is
	generic ( 
	c_busperiod : integer := 40;
	
        
	rtc_sec_length34b : boolean := false;
	vector_numbers : v_irq_t := ( x"11", x"12", x"13", x"14", x"15", x"16", x"17", x"18")
	);
	port ( 
	clk_bus : in std_logic;
      clk_0_5x : in std_logic;
	rst_i : in std_logic;
	db_i : in cpu_data_o_t;
	db_o : out cpu_data_i_t;
	bstb_i : in std_logic;	
	back_i : in std_logic;	
	rtc_sec : out std_logic_vector( 63 downto 0);	
	rtc_nsec : out std_logic_vector( 31 downto 0);
	irq_i : in std_logic_vector( 7 downto 0) := (others => '0');
	enmi_i : in std_logic;
	event_i : in cpu_event_o_t;
	event_o : out cpu_event_i_t;
	reboot : out std_logic
);
end entity;

architecture bytebus of aic_slave_process is
  signal db_word_o : cpu_data_o_t;
  signal db_word_i : cpu_data_i_t;
begin
    aic : entity work.aic(behav)
        generic map (
            c_busperiod => c_busperiod ,
            rtc_sec_length34b => rtc_sec_length34b ,
            vector_numbers => vector_numbers
        )
        port map (
            clk_bus => clk_bus ,
            rst_i => rst_i ,
            db_i => db_word_o ,
            db_o => db_word_i ,
            bstb_i => bstb_i ,
            back_i => back_i ,
            rtc_sec => rtc_sec ,
            rtc_nsec => rtc_nsec ,
            irq_i => irq_i ,
            enmi_i => enmi_i ,
            event_i => event_i ,
            event_o => event_o ,
            reboot => reboot
        );

   slave_adapter : entity work.bussizesa(rtl)
        port map (
            rst => rst_i ,
            clk => clk_bus ,
            clk_half => clk_0_5x,
            db_a_o => db_i ,
            db_a_i => db_o ,
            db_b_o => db_word_o,
            db_b_i => db_word_i
        );
end bytebus;
