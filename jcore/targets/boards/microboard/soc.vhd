-- ******************************************************************
-- ******************************************************************
-- ******************************************************************
-- This file is generated by soc_gen and will be overwritten next time
-- the tool is run. See soc_top/README for information on running soc_gen.
-- ******************************************************************
-- ******************************************************************
-- ******************************************************************
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.config.all;
use work.clk_config.all;
use work.cpu2j0_pack.all;
use work.data_bus_pack.all;
use work.ddr_pack.all;
use work.dma_pack.all;
entity soc is
    port (
        clk_sys : in std_logic;
        clk_sys_2x : in std_logic;
        clk_sys_90 : in std_logic;
        ddr_sd_ctrl : out sd_ctrl_t;
        ddr_sd_data_i : out sd_data_i_t;
        ddr_sd_data_o : in sd_data_o_t;
        emac_phy_resetn : out std_logic;
        emac_phy_rx_col : in std_logic;
        emac_phy_rx_crs : in std_logic;
        emac_phy_rx_dv : in std_logic;
        emac_phy_rx_er : in std_logic;
        emac_phy_rxd : in std_logic_vector(3 downto 0);
        emac_phy_tx_en : out std_logic;
        emac_phy_txd : out std_logic_vector(3 downto 0);
        eth_rx_clk : in std_logic;
        eth_tx_clk : in std_logic;
        flash_clk : out std_logic;
        flash_cs : out std_logic_vector(1 downto 0);
        flash_miso : in std_logic;
        flash_mosi : out std_logic;
        pi : in std_logic_vector(31 downto 0);
        po : out std_logic_vector(31 downto 0);
        reset : in std_logic;
        uart0_rx : in std_logic;
        uart0_tx : out std_logic
    );
end;
architecture impl of soc is
    signal cache01sel_ctrl_temp : std_logic;
    signal cpu0_data_master_ack : std_logic;
    signal cpu0_data_master_en : std_logic;
    signal cpu0_ddr_dbus_i : cpu_data_i_t;
    signal cpu0_ddr_dbus_o : cpu_data_o_t;
    signal cpu0_ddr_ibus_i : cpu_instruction_i_t;
    signal cpu0_ddr_ibus_o : cpu_instruction_o_t;
    signal cpu0_event_i : cpu_event_i_t;
    signal cpu0_event_o : cpu_event_o_t;
    signal cpu0_mem_lock : std_logic;
    signal cpu0_periph_dbus_i : cpu_data_i_t;
    signal cpu0_periph_dbus_o : cpu_data_o_t;
    signal cpu1_ddr_dbus_i : cpu_data_i_t;
    signal cpu1_ddr_dbus_o : cpu_data_o_t;
    signal cpu1_ddr_ibus_i : cpu_instruction_i_t;
    signal cpu1_ddr_ibus_o : cpu_instruction_o_t;
    signal cpu1_event_i : cpu_event_i_t;
    signal cpu1_mem_lock : std_logic;
    signal cpu1_periph_dbus_i : cpu_data_i_t;
    signal cpu1_periph_dbus_o : cpu_data_o_t;
    signal dcache0_ctrl : cache_ctrl_t;
    signal dcache1_ctrl : cache_ctrl_t;
    signal ddr_bus_ack_r : std_logic;
    signal ddr_bus_i : cpu_data_i_t;
    signal ddr_bus_o : cpu_data_o_t;
    signal debug_i : cpu_debug_i_t;
    signal dma_dbus_o : bus_ddr_o_t;
    signal icache0_ctrl : cache_ctrl_t;
    signal icache1_ctrl : cache_ctrl_t;
begin
    cpus : configuration work.one_cpu_nocopro_decode_rom_fpga
        generic map (
            insert_inst_delay_boot_mem => FALSE,
            insert_read_delay_boot_mem => FALSE,
            insert_write_delay_boot_mem => FALSE
        )
        port map (
            clk => clk_sys,
            cpu0_copro_i => NULL_COPR_I,
            cpu0_copro_o => open,
            cpu0_data_master_ack => cpu0_data_master_ack,
            cpu0_data_master_en => cpu0_data_master_en,
            cpu0_ddr_dbus_i => cpu0_ddr_dbus_i,
            cpu0_ddr_dbus_o => cpu0_ddr_dbus_o,
            cpu0_ddr_ibus_i => cpu0_ddr_ibus_i,
            cpu0_ddr_ibus_o => cpu0_ddr_ibus_o,
            cpu0_event_i => cpu0_event_i,
            cpu0_event_o => cpu0_event_o,
            cpu0_mem_lock => cpu0_mem_lock,
            cpu0_periph_dbus_i => cpu0_periph_dbus_i,
            cpu0_periph_dbus_o => cpu0_periph_dbus_o,
            cpu1_copro_i => NULL_COPR_I,
            cpu1_copro_o => open,
            cpu1_data_master_ack => open,
            cpu1_data_master_en => open,
            cpu1_ddr_dbus_i => cpu1_ddr_dbus_i,
            cpu1_ddr_dbus_o => cpu1_ddr_dbus_o,
            cpu1_ddr_ibus_i => cpu1_ddr_ibus_i,
            cpu1_ddr_ibus_o => cpu1_ddr_ibus_o,
            cpu1_event_i => cpu1_event_i,
            cpu1_event_o => open,
            cpu1_mem_lock => cpu1_mem_lock,
            cpu1_periph_dbus_i => cpu1_periph_dbus_i,
            cpu1_periph_dbus_o => cpu1_periph_dbus_o,
            cpu1eni => '0',
            debug_i => CPU_DEBUG_NOP,
            debug_o => open,
            rst => reset
        );
    ddr_ctrl : entity work.ddr_ctrl(logic)
        generic map (
            c_data_width => CFG_DDRDQ_WIDTH,
            c_dll_enable => 2,
            c_period_clkbus => CFG_CLK_CPU_PERIOD_NS,
            c_sa_width => CFG_SA_WIDTH
        )
        port map (
            clk_2x => clk_sys_2x,
            db_i => ddr_bus_o,
            db_o => ddr_bus_i,
            dbo_ack_r => ddr_bus_ack_r,
            ddr_clk0 => clk_sys,
            ddr_clk90 => clk_sys_90,
            reset_in => reset,
            sd_ctrl => ddr_sd_ctrl,
            sd_data_i => ddr_sd_data_o,
            sd_data_o => ddr_sd_data_i
        );
    ddr_ram_mux : entity work.ddr_ram_mux(one_cpu_direct)
        port map (
            cache01sel_ctrl_temp => cache01sel_ctrl_temp,
            clk => clk_sys,
            clk_ddr => clk_sys,
            cpu0_dbus_i => cpu0_ddr_dbus_i,
            cpu0_dbus_o => cpu0_ddr_dbus_o,
            cpu0_ibus_i => cpu0_ddr_ibus_i,
            cpu0_ibus_o => cpu0_ddr_ibus_o,
            cpu0_mem_lock => cpu0_mem_lock,
            cpu1_dbus_i => cpu1_ddr_dbus_i,
            cpu1_dbus_o => cpu1_ddr_dbus_o,
            cpu1_ibus_i => cpu1_ddr_ibus_i,
            cpu1_ibus_o => cpu1_ddr_ibus_o,
            cpu1_mem_lock => cpu1_mem_lock,
            dcache0_ctrl => dcache0_ctrl,
            dcache1_ctrl => dcache1_ctrl,
            ddr_burst => open,
            ddr_bus_ack_r => ddr_bus_ack_r,
            ddr_bus_i => ddr_bus_i,
            ddr_bus_o => ddr_bus_o,
            dma_dbus_i => open,
            dma_dbus_o => dma_dbus_o,
            icache0_ctrl => icache0_ctrl,
            icache1_ctrl => icache1_ctrl,
            rst => reset
        );
    devices : entity work.devices(impl)
        port map (
            clk_sys => clk_sys,
            cpu0_data_master_ack => cpu0_data_master_ack,
            cpu0_data_master_en => cpu0_data_master_en,
            cpu0_event_i => cpu0_event_i,
            cpu0_event_o => cpu0_event_o,
            cpu0_periph_dbus_i => cpu0_periph_dbus_i,
            cpu0_periph_dbus_o => cpu0_periph_dbus_o,
            cpu1_periph_dbus_i => cpu1_periph_dbus_i,
            cpu1_periph_dbus_o => cpu1_periph_dbus_o,
            emac_phy_resetn => emac_phy_resetn,
            emac_phy_rx_col => emac_phy_rx_col,
            emac_phy_rx_crs => emac_phy_rx_crs,
            emac_phy_rx_dv => emac_phy_rx_dv,
            emac_phy_rx_er => emac_phy_rx_er,
            emac_phy_rxd => emac_phy_rxd,
            emac_phy_tx_en => emac_phy_tx_en,
            emac_phy_txd => emac_phy_txd,
            eth_rx_clk => eth_rx_clk,
            eth_tx_clk => eth_tx_clk,
            flash_clk => flash_clk,
            flash_cs => flash_cs,
            flash_miso => flash_miso,
            flash_mosi => flash_mosi,
            pi => pi,
            po => po,
            reset => reset,
            uart0_rx => uart0_rx,
            uart0_tx => uart0_tx
        );
    -- Zero out unused signals
    icache0_ctrl <= (en => '0', inv => '0');
    dcache0_ctrl <= (en => '0', inv => '0');
    cache01sel_ctrl_temp <= '0';
    cpu1_event_i <= (en => '0', cmd => INTERRUPT, vec => (others => '0'), msk => '0', lvl => (others => '0'));
    dma_dbus_o <= (en => '0', a => (others => '0'), d => (others => '0'), wr => '0', we => (others => '0'), burst32 => '0', burst16 => '0', bgrp => '0');
    dcache1_ctrl <= (en => '0', inv => '0');
    icache1_ctrl <= (en => '0', inv => '0');
end;
